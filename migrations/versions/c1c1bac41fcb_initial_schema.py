"""Initial schema

Revision ID: c1c1bac41fcb
Revises: 
Create Date: 2025-07-09 11:32:19.970539

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c1c1bac41fcb'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('missions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('reward_points', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_missions_name'), 'missions', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False, comment='Telegram User ID'),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('vip_expires_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_achievements',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('unlocked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'achievement_id')
    )
    op.create_table('user_missions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('mission_id', sa.Integer(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['mission_id'], ['missions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'mission_id', 'completed_at')
    )
    op.create_table('user_progress',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('current_story_node', sa.String(), nullable=True),
    sa.Column('unlocked_fragments', sa.JSON(), nullable=False),
    sa.Column('diana_state', sa.String(), nullable=False),
    sa.Column('dominant_archetype', sa.String(), nullable=True),
    sa.Column('secondary_archetypes', sa.JSON(), nullable=False),
    sa.Column('resonance_score', sa.Float(), nullable=False),
    sa.Column('significant_interactions', sa.JSON(), nullable=False),
    sa.Column('last_interaction_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_progress')
    op.drop_table('user_missions')
    op.drop_table('user_achievements')
    op.drop_table('users')
    op.drop_index(op.f('ix_missions_name'), table_name='missions')
    op.drop_table('missions')
    op.drop_table('achievements')
    # ### end Alembic commands ###
